services:
  postgres:
    restart: always
    image: postgres:latest
    container_name: postgres
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - ./postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  django:
    build: 
      context: ./django
    container_name: django
    command: >
      sh -c "python manage.py migrate && python manage.py makemigrations &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./django:/app
    env_file: .env
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: "curl --fail http://localhost:8000 || exit 1"
      start_period: 5s
      interval: 5s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  nginx:
    build: 
      context: ./nginx
    container_name: nginx
    ports:
      - "8080:80"
      - "4444:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      django:
        condition: service_healthy
    restart: unless-stopped